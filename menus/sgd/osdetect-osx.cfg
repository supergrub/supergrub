# Super Grub Disk - osdetect-osx.cfg
# Copyright (C) 2024 Adrian Gibanel Lopez.
#
# Super Grub Disk is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Super Grub Disk is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Super Grub Disk.  If not, see <http://www.gnu.org/licenses/>.

set option_title=$"Mac OS X/Darwin"

function osx_entry_add {
set device="$1"
set uuid="$2"
set kerncmd="$3"
set arch="$4"
set args="$5"
set desc="$6"
menuentry "${finaloption_tab_str}Mac OS X/Darwin $arch-bit ($device) - $desc" $device $uuid $kerncmd $args {
  set root="$2"
  set uuid="$3"
  set kerncmd="$4"
  set args="$5"

  insmod all_video
  set do_resume=0
    if [ /var/vm/sleepimage -nt10 / ]; then
        if xnu_resume /var/vm/sleepimage; then
            set do_resume=1
        fi
    fi
    if [ $do_resume = 0 ]; then
        xnu_uuid ${uuid} uuid
        if [ -f /Extra/DSDT.aml ]; then
            acpi -e /Extra/DSDT.aml
        fi
        if [ /kernelcache -nt /System/Library/Extensions ]; then
            $kerncmd /kernelcache boot-uuid=${uuid} rd=*uuid $args
        else
            $kerncmd /mach_kernel boot-uuid=${uuid} rd=*uuid $args
            if [ /System/Library/Extensions.mkext -nt /System/Library/Extensions ]; then
                xnu_mkext /System/Library/Extensions.mkext
            else
                xnu_kextdir /System/Library/Extensions
            fi
        fi
        if [ -f /Extra/Extensions.mkext ]; then
            xnu_mkext /Extra/Extensions.mkext
        fi
        if [ -d /Extra/Extensions ]; then
            xnu_kextdir /Extra/Extensions
        fi
        if [ -f /Extra/devprop.bin ]; then
            xnu_devprop_load /Extra/devprop.bin
        fi
        if [ -f /Extra/splash.jpg ]; then
            insmod jpeg
            xnu_splash /Extra/splash.jpg
        fi
        if [ -f /Extra/splash.png ]; then
            insmod png
            xnu_splash /Extra/splash.png
        fi
        if [ -f /Extra/splash.tga ]; then
            insmod tga
            xnu_splash /Extra/splash.tga
        fi
        fi
}
}

function run_option {

  source "${sg2d_directory}/tools.cfg"

  if [ "$1" = "osdetect" ] ; then
    run_option_osdetect_mode="TRUE"
  else
    run_option_osdetect_mode="FALSE"
  fi

  if [ "${run_option_osdetect_mode}" = "FALSE" ] ; then
    update_sg2d_devices
    devices_to_loop="${sg2d_devices}"
  else
    update_osdetect_devices
    devices_to_loop="${osdetect_devices}"
  fi

  osdetect_exclusive_devices=""
  exclusive_device_os="TRUE"

  os_found=false

  set saved_root=$root

  for dev in ${devices_to_loop}; do
    getdevice device $dev

    # $fstype: filesystem type identified
    probe -s fstype -f $dev
    # uuid: filesystem UUID
    probe -s uuid -u $dev

    if test "$fstype" = hfsplus -a -f ($device)/mach_kernel -a -d ($device)/Users; then

      os_found=true

      # If this an exclusive device OS...
      # we know there is not going to be another OS in the same partition
      # so we add it to the osdetect_exclusive_devices variable
      if [ "${exclusive_device_os}" = "TRUE" ] ; then
        osdetect_exclusive_devices="${osdetect_exclusive_devices} ${dev}"
      fi

      osx_entry_add $device $uuid "xnu_kernel" "32" "-v" "Verbose Mode"
      osx_entry_add $device $uuid "xnu_kernel" "32" "-x" "Safe Mode"
      osx_entry_add $device $uuid "xnu_kernel" "32" "-s" "Single User"
      osx_entry_add $device $uuid "xnu_kernel" "32" "-f" "Ignore Caches"
      osx_entry_add $device $uuid "xnu_kernel64" "64" "-v" "Verbose Mode"
      osx_entry_add $device $uuid "xnu_kernel64" "64" "-x" "Safe Mode"
      osx_entry_add $device $uuid "xnu_kernel64" "64" "-s" "Single User"
      osx_entry_add $device $uuid "xnu_kernel64" "64" "-f" "Ignore Caches"

    fi

  done

  if [ "$os_found" != true ]; then
    menuentry "${finaloption_tab_str}"$"(Not detected)" {
      sleep 1
    }
  fi

  export osdetect_exclusive_devices

  set root=$saved_root


}
